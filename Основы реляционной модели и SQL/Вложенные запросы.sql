-- выбираю книги авторов,
-- цены на которые меньше либо равны средней цене книг на складе
-- сортирую по убыванию цены
SELECT author, title, price
FROM book
WHERE price <= (
    -- вложенный запрос для получения средней цены
    SELECT AVG(price)
    FROM book
    )
ORDER BY price DESC;

-- выбираю книги, цена на которые не превышает минимальную цену более чем на 150 рублей
-- сортирую по возрастанию цены
SELECT author, title, price
FROM book
WHERE price - (
    -- вложенный запрос для получения минимальной цены
    SELECT MIN(price) FROM book
    ) <= 150
ORDER BY price ASC;

-- выбираю книги, количество экземпляров которых больше не повторяется в таблице
SELECT author, title, amount
FROM book
WHERE amount IN (
    -- вложенный запрос, который оставляет только то количество книг,
    -- которое повторяется в таблице только 1 раз
    SELECT amount
    FROM book
    GROUP BY amount
    HAVING COUNT(amount) = 1
    );

-- выбираю книги, которые имеют цену меньше, чем самая большая цена среди минимальных цен авторов
SELECT author, title, price
FROM book
WHERE price < ANY(
    -- вложенный запрос для получения минимальных цен на книги каждого автора
    SELECT MIN(price)
    FROM book
    GROUP BY author
    );

-- выбираю книги, которые нужно докупить, чтобы их количество сравнялось с максимальным количеством экземпляров на складе
-- в столбце "Заказ" вывожу количество экзепляров, которое необходимо заказать
SELECT title, author, amount, ((
    -- вложенный запрос, возвращающий максимальное количество экземпляров книг
    SELECT MAX(amount) FROM book
    ) - amount) AS Заказ
FROM book
WHERE amount <> (
    -- вложенный запрос, возвращающий максимальное количество экземпляров книг
    SELECT MAX(amount) FROM book
    );

/*
Для каждого автора получаю количество книг, которые стоят дешевле средней цены за книгу.
В итоге должна получиться таблица со столбцами: Автор, Количество_дешевых_книг.
*/
SELECT author AS Автор, COUNT(title) AS Количество_дешевых_книг
FROM book
WHERE price < (
    -- вложенный запрос, возвращающий среднюю цену на книгу
    SELECT AVG(price)
    FROM book
    )
GROUP BY author;

/*
В следующем запросе для каждого автора получаю количество книг, которые стоят дороже средней цены или равны ей.
В итоге должна получиться таблица со столбцами: Автор, Количество_дорогих_книг.
*/
SELECT author AS Автор, COUNT(title) AS Количество_дорогих_книг
FROM book
WHERE price >= (
    -- вложенный запрос, возвращающий среднюю цену на книгу
    SELECT AVG(price)
    FROM book
    )
GROUP BY author;
